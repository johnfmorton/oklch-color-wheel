{"version":3,"file":"OklchColorWheel.js","sourceRoot":"","sources":["../../src/OklchColorWheel.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n\nexport class OklchColorWheel extends LitElement {\n  static styles = css`\n    :host {\n      display: block;\n      /* Let the component shrink or grow while never exceeding 300px */\n      width: 100%;\n      /* max-width: 300px; */\n      /* Keeps aspect ratio 1:1 for a perfect square */\n      aspect-ratio: 1/1;\n      position: relative;\n    }\n\n    .wrapper {\n      /* max-width: 300px; */\n      display: block;\n      /* border: 1px solid #e7e7e7; */\n      border-radius: 4px;\n      padding: 0.5rem;\n      font-family: 'Arial', sans-serif;\n    }\n\n    svg {\n      /* Make the SVG fill the host container */\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    .handle {\n      fill: white;\n      stroke: black;\n      stroke-width: 2;\n      cursor: pointer;\n    }\n\n    .degree {\n      /* Absolutely centered text inside the host container */\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      pointer-events: none;\n      text-align: center;\n      color: white;\n      font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo,\n        Consolas, 'DejaVu Sans Mono', monospace;\n      font-weight: bold;\n    }\n\n    @media (max-width: 400px) {\n      .degree {\n        font-size: 3rem;\n        left: calc(50% + 15px);\n        /* simpler style for small wrapper */\n      }\n    }\n\n    @media (min-width: 401px) {\n      .degree {\n        font-size: 4.25rem;\n        left: calc(50% + 22px);\n        /* or anything else for bigger wrapper */\n      }\n    }\n  `;\n\n  @property({ type: String }) header = 'OKLCH Color Wheel';\n\n  @state() private hue = 0;\n  private _dragging = false;\n\n  private _startDrag(event: MouseEvent | TouchEvent) {\n    event.preventDefault();\n    this._dragging = true;\n    this._updateHueFromEvent(event);\n\n    const moveHandler = (e: MouseEvent | TouchEvent) =>\n      this._updateHueFromEvent(e);\n    const endHandler = () => {\n      this._dragging = false;\n      window.removeEventListener('mousemove', moveHandler);\n      window.removeEventListener('mouseup', endHandler);\n      window.removeEventListener('touchmove', moveHandler);\n      window.removeEventListener('touchend', endHandler);\n    };\n\n    window.addEventListener('mousemove', moveHandler);\n    window.addEventListener('mouseup', endHandler);\n    window.addEventListener('touchmove', moveHandler);\n    window.addEventListener('touchend', endHandler);\n  }\n\n  private _updateHueFromEvent(event: MouseEvent | TouchEvent) {\n    if (!this._dragging) return;\n    const svg = this.renderRoot.querySelector('svg');\n    if (!svg) return;\n\n    const rect = svg.getBoundingClientRect();\n    const clientX =\n      event instanceof TouchEvent ? event.touches[0].clientX : event.clientX;\n    const clientY =\n      event instanceof TouchEvent ? event.touches[0].clientY : event.clientY;\n    const dx = clientX - (rect.left + rect.width / 2);\n    const dy = clientY - (rect.top + rect.height / 2);\n    const angle = Math.atan2(dy, dx) * (180 / Math.PI);\n    this.hue = (angle + 360) % 360;\n  }\n\n  render() {\n    // Convert hue to radians to place the handle\n    const angleRad = (this.hue * Math.PI) / 180;\n    // 140 radius matches 300 viewBox. Adjust radius or viewBox if you want a margin.\n    const handleX = 150 + 137 * Math.cos(angleRad);\n    const handleY = 150 + 137 * Math.sin(angleRad);\n\n    return html`\n      <div class=\"wrapper\">\n        <h2 style=\"text-align:center; margin:1rem 0 0.25rem 0; padding:0;\">\n          ${this.header}\n        </h2>\n        <div\n          style=\"text-align:center; font-size:0.9rem; margin-bottom:0; color:#666;\"\n        >\n          Drag the white circle to change the degree.\n        </div>\n\n        <div\n          class=\"outer-wheel\"\n          style=\"\n          max-width: 300px;\n          height: 300px;\n          border-radius: 0%;\n          margin: 0 auto;\n          position: relative;\n        \"\n        >\n          <svg viewBox=\"0 0 300 300\" preserveAspectRatio=\"xMidYMid meet\">\n            <!-- The circle is 300 in diameter to match the entire viewBox -->\n            <circle\n              cx=\"150\"\n              cy=\"150\"\n              r=\"137\"\n              fill=\"oklch(50.0% 0.2 ${this.hue.toFixed(0)})\"\n              stroke=\"lightgray\"\n            ></circle>\n            <g\n              class=\"handle-group\"\n              @mousedown=${this._startDrag}\n              @touchstart=${this._startDrag}\n            >\n              <circle\n                class=\"handle\"\n                cx=${handleX}\n                cy=${handleY}\n                r=\"10\"\n              ></circle>\n            </g>\n          </svg>\n          <div class=\"degree\">${this.hue.toFixed(0)}Â°</div>\n        </div>\n\n        <div\n          style=\"text-align: center; margin-bottom: 1rem; font-weight:bold; font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; white-space: normal; word-break: break-all;\"\n        >\n          <div\n            style=\"\n        display: inline-block;\n        position: relative;\n        left: -3px;\n        top: 2px;\n          width: 12px;\n          height: 12px;\n          margin-top: 1rem;\n          border: 1px solid #ccc;\n          background: oklch(50.0% 0.2 ${this.hue.toFixed(0)});\n          \"\n          ></div>\n          <span style=\"color: #767676;\">oklch(&nbsp;50.0%&nbsp;0.200</span>\n          <span style=\"color:#393939;\">${this.hue.toFixed(0)}</span>\n          <span style=\"color: #767676;\">)</span>\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('oklch-color-wheel', OklchColorWheel);\n"]}